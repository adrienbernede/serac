####
# This is the share configuration of jobs for quartz
.on_quartz:
  tags:
    - shell
    - quartz
  except:
    refs:
      - /_qnone/
    variables:
      - $SERAC_CI_QUARTZ == "OFF"

####
# In pre-build phase, allocate a node for builds
allocate_resources_build_quartz:
  variables:
    GIT_STRATEGY: none
  extends: .on_quartz
  stage: allocate_resources
  script:
    - salloc -N 1 -c 36 -p pdebug -t 30 --no-shell --job-name=${PROJECT_ALLOC_NAME}

####
# In post-build phase, deallocate resources
# Note : make sure this is run even on build phase failure
release_resources_build_quartz:
  variables:
    GIT_STRATEGY: none
  extends: .on_quartz
  stage: release_resources
  script:
    - export JOBID=$(squeue -h --name=${PROJECT_ALLOC_NAME} --format=%A)
    - ([[ -n "${JOBID}" ]] && scancel ${JOBID})
  when: always

####
# Template
.build_quartz:
  extends: .on_quartz
  stage: build
  script:
    - JOBID=$(squeue -h --name=${PROJECT_ALLOC_NAME} --format=%A)
    - EXEC_PREFIX="srun $( [[ -n "${JOBID}" ]] && echo "--jobid=${JOBID}" ) -t 20 -N 1 -n 1 -c 4"
    - ${EXEC_PREFIX} python scripts/uberenv/uberenv.py --spec=${SPEC}
    - ${EXEC_PREFIX} scripts/gitlab/build_and_test.sh

####
# Build jobs
build_quartz_clang_4_0_0:
  variables:
    COMPILER: "clang@4.0.0"
    SPEC: "@develop%${COMPILER}"
  extends: .build_quartz

build_quartz_gcc_8_1_0:
  variables:
    COMPILER: "gcc@8.1.0"
    SPEC: "@develop%${COMPILER}"
  extends: .build_quartz

build_quartz_intel_19_0_4:
  variables:
    COMPILER: "intel@19.0.4"
    SPEC: "@develop%${COMPILER}"
  extends: .build_quartz
